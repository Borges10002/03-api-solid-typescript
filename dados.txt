criar package.json
  npm init -y

biblioteca typescript
  npm install typescript
  npm i typescript @types/node tsc tsup -D

criar tsconfig.json
  tsc --init

biblioteca de rotas 
  npm i fastify 

biblioteca para carregar .env 
  npm i dotenv

biblioteca para validacao 
  npm i zod 
  
biblioteca de ORM comunicacao with banco de dados
  npm i prisma -D
  iniciar banco de dados - npx prisma init

  "[prisma]": {
  "editor.defaultFormatter": "Prisma.prisma",
  "editor.formatOnSave": true
},
- criar as tipagem automatizado 
   npx prisma generate  
   npm i @prisma/client

  docker
   create = docker run --name api-solid-pg -e POSTGRESQL_USERNAME=docker -e POSTGRESQL_PASSWORD=docker -e POSTGRESQL_DATABASE=apisolid -p 5432:5432 bitnami/postgresql

 criar a img docker
docker build -t rentx .

verificar se existe uma img
docker ps

roda o projeto em docker
docker run -p 3333:3333 rentx

listar o de container docker
docker ps
docker ps -a
docker start a4d09321d78a
docker stop a4d09321d78a
docker rm a4d09321d78a --deletar

docker composer stop
docker composer up -d
docker composer up 

--gerar as tabelas no banco
npx prismar migrate dev

iniciar docker
docker-compose start id a4d09321d78a 

  biblioteca para hash de senha 
  npm i bcryptjs
  npm i -D @types/bcryptjs 

biblioteca to test 
  npm i vitest vite-tsconfig-paths -D 
  https://vitest.dev/guide/ui.html 
  npm i -D @vitest/ui

biblioteca de autenticacao 
  npm i @fastify/jwt

biblioteca de teste http 
  npm link

biblioteca para executar script
  npm i -D npm-run-all

biblioteca para executar supertest 
  npm i supertest -D  
  npm i @types/supertest -D



  